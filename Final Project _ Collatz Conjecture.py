# -*- coding: utf-8 -*-
"""콜라츠 추측

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1svIjjkJZTeyG4q3OiztTxGdx4kOrDElv
"""

def cfunction(num):
    print('처음수:',num)
    while num>1: # 함숫값이 1보다 클때
        if num%2==0:    #짝수면
            num=num//2  #2로 나눔
            print(num)
        else:           #그렇지 않으면
            num=3*num+1 # *3+1
            print(num)

cfunction(7)           #함숫값 입력

import matplotlib.pyplot as plt
def collatz(num):
    loop = []
    for i in range(500):    # 500 번까지만 수행
        loop.append(int(num))
        if num == 1:         # 1이면 종료( 1 * 3( + 1) = 4 / 2 = 2 / 2 = 1 (반복)
            break
        elif num % 2 == 0:    # 짝수면
            num = num/2      # 2로 나눔
        elif num % 2 == 1:  # 홀수면
            num = (num*3)+1  # * 3 + 1
    print('수열의 길이:', len(loop))
    plt.plot(loop, marker='o')
    plt.show()

    return loop             #loop를 반환한다.

collatz(277)

import numpy as np
import matplotlib.pyplot as plt
def collatz(num):
    loop = []
    for j in range(500):    # 500 번까지만 수행
        loop.append(int(num))
        if num == 1:         # 1이면 종료( 1 * 3( + 1) = 4 / 2 = 2 / 2 = 1 (반복)
            break
        elif num % 2 == 0:    # 짝수면
            num = num/2      # 2로 나눔
        elif num % 2 == 1:  # 홀수면
            num = (num*3)+1  # * 3 + 1
    print('수열의 길이:', len(loop))
    plt.plot(np.log10(loop), marker='o')
    plt.show()

    return loop             #loop를 반환한다.

collatz(72101241)